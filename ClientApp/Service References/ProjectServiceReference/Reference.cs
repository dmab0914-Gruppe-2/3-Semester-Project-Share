//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.ProjectServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApp.ProjectServiceReference.UserType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApp.ProjectServiceReference.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectReturnType", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    public enum ProjectReturnType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IdMissing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TitleMissing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescriptionMissing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectFolderMissing = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectAdministratorUserMissing = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectFolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectFolder {
            get {
                return this.ProjectFolderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectFolderField, value) != true)) {
                    this.ProjectFolderField = value;
                    this.RaisePropertyChanged("ProjectFolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectServiceReference.IServiceProjectController")]
    public interface IServiceProjectController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProjectController/AddProject", ReplyAction="http://tempuri.org/IServiceProjectController/AddProjectResponse")]
        ClientApp.ProjectServiceReference.ProjectReturnType AddProject(string title, string description, string projectFolder, ClientApp.ProjectServiceReference.User projectAdministratorUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProjectController/AddProject", ReplyAction="http://tempuri.org/IServiceProjectController/AddProjectResponse")]
        System.Threading.Tasks.Task<ClientApp.ProjectServiceReference.ProjectReturnType> AddProjectAsync(string title, string description, string projectFolder, ClientApp.ProjectServiceReference.User projectAdministratorUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProjectController/GetAllProjects", ReplyAction="http://tempuri.org/IServiceProjectController/GetAllProjectsResponse")]
        ClientApp.ProjectServiceReference.Project[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProjectController/GetAllProjects", ReplyAction="http://tempuri.org/IServiceProjectController/GetAllProjectsResponse")]
        System.Threading.Tasks.Task<ClientApp.ProjectServiceReference.Project[]> GetAllProjectsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProjectControllerChannel : ClientApp.ProjectServiceReference.IServiceProjectController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProjectControllerClient : System.ServiceModel.ClientBase<ClientApp.ProjectServiceReference.IServiceProjectController>, ClientApp.ProjectServiceReference.IServiceProjectController {
        
        public ServiceProjectControllerClient() {
        }
        
        public ServiceProjectControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceProjectControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProjectControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProjectControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientApp.ProjectServiceReference.ProjectReturnType AddProject(string title, string description, string projectFolder, ClientApp.ProjectServiceReference.User projectAdministratorUser) {
            return base.Channel.AddProject(title, description, projectFolder, projectAdministratorUser);
        }
        
        public System.Threading.Tasks.Task<ClientApp.ProjectServiceReference.ProjectReturnType> AddProjectAsync(string title, string description, string projectFolder, ClientApp.ProjectServiceReference.User projectAdministratorUser) {
            return base.Channel.AddProjectAsync(title, description, projectFolder, projectAdministratorUser);
        }
        
        public ClientApp.ProjectServiceReference.Project[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public System.Threading.Tasks.Task<ClientApp.ProjectServiceReference.Project[]> GetAllProjectsAsync() {
            return base.Channel.GetAllProjectsAsync();
        }
    }
}
