//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.ChatService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatService.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessageToFile", ReplyAction="http://tempuri.org/IChatService/SendMessageToFileResponse")]
        bool SendMessageToFile(Library.ChatMessage message, Library.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessageToFile", ReplyAction="http://tempuri.org/IChatService/SendMessageToFileResponse")]
        System.Threading.Tasks.Task<bool> SendMessageToFileAsync(Library.ChatMessage message, Library.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetLast20MessagesFromFile", ReplyAction="http://tempuri.org/IChatService/GetLast20MessagesFromFileResponse")]
        Library.ChatMessage[] GetLast20MessagesFromFile(Library.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetLast20MessagesFromFile", ReplyAction="http://tempuri.org/IChatService/GetLast20MessagesFromFileResponse")]
        System.Threading.Tasks.Task<Library.ChatMessage[]> GetLast20MessagesFromFileAsync(Library.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetNewMessagesFromFile", ReplyAction="http://tempuri.org/IChatService/GetNewMessagesFromFileResponse")]
        Library.ChatMessage[] GetNewMessagesFromFile(Library.File file, int lastMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetNewMessagesFromFile", ReplyAction="http://tempuri.org/IChatService/GetNewMessagesFromFileResponse")]
        System.Threading.Tasks.Task<Library.ChatMessage[]> GetNewMessagesFromFileAsync(Library.File file, int lastMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ClientApp.ChatService.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<ClientApp.ChatService.IChatService>, ClientApp.ChatService.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendMessageToFile(Library.ChatMessage message, Library.File file) {
            return base.Channel.SendMessageToFile(message, file);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageToFileAsync(Library.ChatMessage message, Library.File file) {
            return base.Channel.SendMessageToFileAsync(message, file);
        }
        
        public Library.ChatMessage[] GetLast20MessagesFromFile(Library.File file) {
            return base.Channel.GetLast20MessagesFromFile(file);
        }
        
        public System.Threading.Tasks.Task<Library.ChatMessage[]> GetLast20MessagesFromFileAsync(Library.File file) {
            return base.Channel.GetLast20MessagesFromFileAsync(file);
        }
        
        public Library.ChatMessage[] GetNewMessagesFromFile(Library.File file, int lastMessage) {
            return base.Channel.GetNewMessagesFromFile(file, lastMessage);
        }
        
        public System.Threading.Tasks.Task<Library.ChatMessage[]> GetNewMessagesFromFileAsync(Library.File file, int lastMessage) {
            return base.Channel.GetNewMessagesFromFileAsync(file, lastMessage);
        }
    }
}
