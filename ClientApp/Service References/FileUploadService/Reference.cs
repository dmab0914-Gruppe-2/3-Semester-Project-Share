//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.FileUploadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMetaData", Namespace="http://schemas.datacontract.org/2004/07/WebService.Models")]
    [System.SerializableAttribute()]
    public partial class FileMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClientApp.FileUploadService.DefinedFileTypes FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullLocalPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        private int FileIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClientApp.FileUploadService.DefinedFileTypes FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullLocalPath {
            get {
                return this.FullLocalPathField;
            }
            set {
                if ((object.ReferenceEquals(this.FullLocalPathField, value) != true)) {
                    this.FullLocalPathField = value;
                    this.RaisePropertyChanged("FullLocalPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefinedFileTypes", Namespace="http://schemas.datacontract.org/2004/07/WebService.Models")]
    public enum DefinedFileTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCX = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTF = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        jpg = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        png = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GENERIC = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileUploadService.IFileUpLoadService")]
    public interface IFileUpLoadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/UploadFile", ReplyAction="http://tempuri.org/IFileUpLoadService/UploadFileResponse")]
        ClientApp.FileUploadService.UploadFileResponse UploadFile(ClientApp.FileUploadService.FileUploadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/UploadFile", ReplyAction="http://tempuri.org/IFileUpLoadService/UploadFileResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.UploadFileResponse> UploadFileAsync(ClientApp.FileUploadService.FileUploadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/AddFile", ReplyAction="http://tempuri.org/IFileUpLoadService/AddFileResponse")]
        ClientApp.FileUploadService.AddSingleFileMessage AddFile(ClientApp.FileUploadService.AddSingleFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/AddFile", ReplyAction="http://tempuri.org/IFileUpLoadService/AddFileResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.AddSingleFileMessage> AddFileAsync(ClientApp.FileUploadService.AddSingleFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/DownloadFile", ReplyAction="http://tempuri.org/IFileUpLoadService/DownloadFileResponse")]
        ClientApp.FileUploadService.FileDownloadReturnMessage DownloadFile(ClientApp.FileUploadService.FileDownloadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/DownloadFile", ReplyAction="http://tempuri.org/IFileUpLoadService/DownloadFileResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.FileDownloadReturnMessage> DownloadFileAsync(ClientApp.FileUploadService.FileDownloadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/GetAllFilesForProject", ReplyAction="http://tempuri.org/IFileUpLoadService/GetAllFilesForProjectResponse")]
        ClientApp.FileUploadService.GetAllFilesForProjectResponse GetAllFilesForProject(ClientApp.FileUploadService.GetAllFilesForProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/GetAllFilesForProject", ReplyAction="http://tempuri.org/IFileUpLoadService/GetAllFilesForProjectResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.GetAllFilesForProjectResponse> GetAllFilesForProjectAsync(ClientApp.FileUploadService.GetAllFilesForProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/getFileById", ReplyAction="http://tempuri.org/IFileUpLoadService/getFileByIdResponse")]
        ClientApp.FileUploadService.getFileByIdResponse getFileById(ClientApp.FileUploadService.getFileByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/getFileById", ReplyAction="http://tempuri.org/IFileUpLoadService/getFileByIdResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.getFileByIdResponse> getFileByIdAsync(ClientApp.FileUploadService.getFileByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/AddMultiFiles", ReplyAction="http://tempuri.org/IFileUpLoadService/AddMultiFilesResponse")]
        ClientApp.FileUploadService.AddMultiFilesReturn AddMultiFiles(ClientApp.FileUploadService.AddMultiFilesMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/AddMultiFiles", ReplyAction="http://tempuri.org/IFileUpLoadService/AddMultiFilesResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.AddMultiFilesReturn> AddMultiFilesAsync(ClientApp.FileUploadService.AddMultiFilesMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/GetFile", ReplyAction="http://tempuri.org/IFileUpLoadService/GetFileResponse")]
        ClientApp.FileUploadService.GetFIleReturnMessage GetFile(ClientApp.FileUploadService.GetFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpLoadService/GetFile", ReplyAction="http://tempuri.org/IFileUpLoadService/GetFileResponse")]
        System.Threading.Tasks.Task<ClientApp.FileUploadService.GetFIleReturnMessage> GetFileAsync(ClientApp.FileUploadService.GetFileMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ClientApp.FileUploadService.FileMetaData Metadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(ClientApp.FileUploadService.FileMetaData Metadata, System.IO.Stream FileByteStream) {
            this.Metadata = Metadata;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSingleFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddSingleFileMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Library.File file;
        
        public AddSingleFileMessage() {
        }
        
        public AddSingleFileMessage(Library.File file) {
            this.file = file;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileDownloadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileDownloadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ClientApp.FileUploadService.FileMetaData FileMetaData;
        
        public FileDownloadMessage() {
        }
        
        public FileDownloadMessage(ClientApp.FileUploadService.FileMetaData FileMetaData) {
            this.FileMetaData = FileMetaData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileDownloadReturnMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileDownloadReturnMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ClientApp.FileUploadService.FileMetaData DownloadedFileMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public FileDownloadReturnMessage() {
        }
        
        public FileDownloadReturnMessage(ClientApp.FileUploadService.FileMetaData DownloadedFileMetadata, System.IO.Stream FileByteStream) {
            this.DownloadedFileMetadata = DownloadedFileMetadata;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllFilesForProject", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllFilesForProjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int projectId;
        
        public GetAllFilesForProjectRequest() {
        }
        
        public GetAllFilesForProjectRequest(int projectId) {
            this.projectId = projectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllFilesForProjectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllFilesForProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Library.File[] GetAllFilesForProjectResult;
        
        public GetAllFilesForProjectResponse() {
        }
        
        public GetAllFilesForProjectResponse(Library.File[] GetAllFilesForProjectResult) {
            this.GetAllFilesForProjectResult = GetAllFilesForProjectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getFileById", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getFileByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int fileID;
        
        public getFileByIdRequest() {
        }
        
        public getFileByIdRequest(int fileID) {
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getFileByIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getFileByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Library.File getFileByIdResult;
        
        public getFileByIdResponse() {
        }
        
        public getFileByIdResponse(Library.File getFileByIdResult) {
            this.getFileByIdResult = getFileByIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMultiFilesMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddMultiFilesMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] filenames;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] filedescs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public Library.Project project;
        
        public AddMultiFilesMessage() {
        }
        
        public AddMultiFilesMessage(string[] filenames, string[] filedescs, Library.Project project) {
            this.filenames = filenames;
            this.filedescs = filedescs;
            this.project = project;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMultiFilesReturn", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddMultiFilesReturn {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int[] ids;
        
        public AddMultiFilesReturn() {
        }
        
        public AddMultiFilesReturn(int[] ids) {
            this.ids = ids;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFileMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ClientApp.FileUploadService.FileMetaData Metadata;
        
        public GetFileMessage() {
        }
        
        public GetFileMessage(ClientApp.FileUploadService.FileMetaData Metadata) {
            this.Metadata = Metadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFIleReturnMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFIleReturnMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Library.File file;
        
        public GetFIleReturnMessage() {
        }
        
        public GetFIleReturnMessage(Library.File file) {
            this.file = file;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileUpLoadServiceChannel : ClientApp.FileUploadService.IFileUpLoadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUpLoadServiceClient : System.ServiceModel.ClientBase<ClientApp.FileUploadService.IFileUpLoadService>, ClientApp.FileUploadService.IFileUpLoadService {
        
        public FileUpLoadServiceClient() {
        }
        
        public FileUpLoadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUpLoadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUpLoadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUpLoadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientApp.FileUploadService.UploadFileResponse UploadFile(ClientApp.FileUploadService.FileUploadMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.UploadFileResponse> UploadFileAsync(ClientApp.FileUploadService.FileUploadMessage request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public ClientApp.FileUploadService.AddSingleFileMessage AddFile(ClientApp.FileUploadService.AddSingleFileMessage request) {
            return base.Channel.AddFile(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.AddSingleFileMessage> AddFileAsync(ClientApp.FileUploadService.AddSingleFileMessage request) {
            return base.Channel.AddFileAsync(request);
        }
        
        public ClientApp.FileUploadService.FileDownloadReturnMessage DownloadFile(ClientApp.FileUploadService.FileDownloadMessage request) {
            return base.Channel.DownloadFile(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.FileDownloadReturnMessage> DownloadFileAsync(ClientApp.FileUploadService.FileDownloadMessage request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public ClientApp.FileUploadService.GetAllFilesForProjectResponse GetAllFilesForProject(ClientApp.FileUploadService.GetAllFilesForProjectRequest request) {
            return base.Channel.GetAllFilesForProject(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.GetAllFilesForProjectResponse> GetAllFilesForProjectAsync(ClientApp.FileUploadService.GetAllFilesForProjectRequest request) {
            return base.Channel.GetAllFilesForProjectAsync(request);
        }
        
        public ClientApp.FileUploadService.getFileByIdResponse getFileById(ClientApp.FileUploadService.getFileByIdRequest request) {
            return base.Channel.getFileById(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.getFileByIdResponse> getFileByIdAsync(ClientApp.FileUploadService.getFileByIdRequest request) {
            return base.Channel.getFileByIdAsync(request);
        }
        
        public ClientApp.FileUploadService.AddMultiFilesReturn AddMultiFiles(ClientApp.FileUploadService.AddMultiFilesMessage request) {
            return base.Channel.AddMultiFiles(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.AddMultiFilesReturn> AddMultiFilesAsync(ClientApp.FileUploadService.AddMultiFilesMessage request) {
            return base.Channel.AddMultiFilesAsync(request);
        }
        
        public ClientApp.FileUploadService.GetFIleReturnMessage GetFile(ClientApp.FileUploadService.GetFileMessage request) {
            return base.Channel.GetFile(request);
        }
        
        public System.Threading.Tasks.Task<ClientApp.FileUploadService.GetFIleReturnMessage> GetFileAsync(ClientApp.FileUploadService.GetFileMessage request) {
            return base.Channel.GetFileAsync(request);
        }
    }
}
